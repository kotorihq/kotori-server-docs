swagger: '2.0'
info:
  version: v1
  title: Kotori
  description: |-
    REST API for Kotori.

    It's _work in progress_ at the moment.
  contact:
    name: frohikey
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/kotorihq/kotori-server/master/LICENSE'
host: localhost:6502
basePath: /
paths:
  /api/instance:
    get:
      tags:
        - Instance
      summary: Get instance information.
      description: >-
        Just a simple method for testing purposes. It returns information about
        instance which you already know (if you are not drunk).
      operationId: ApiInstanceGet
      consumes: []
      produces:
        - application/json
      responses:
        '200':
          description: Instance information
          schema:
            $ref: '#/definitions/InstanceResult'
          examples:
            application/json:
              instance: master-instance
        '500':
          description: Internal server error
  /api/projects:
    get:
      tags:
        - Projects
      summary: Get projects
      description: |-
        Gets a collection of existing projects.

        Master key required.
      operationId: ApiProjectsGet
      consumes: []
      produces:
        - application/json
      responses:
        '200':
          description: A collection of the projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
          examples:
            application/json:
              - id: my-blog
                name: My Blog
              - id: your-blog
                name: Your Blog
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
        - masterKey: []
    post:
      tags:
        - Projects
      summary: Create project
      description: |-
        Creates the project.

        Master key required.
      operationId: ApiProjectsPost
      consumes: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateProjectRequest'
      responses:
        '201':
          description: Project location
          schema:
            $ref: '#/definitions/CreateProjectResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
        - masterKey: []
  '/api/projects/{projectId}':
    get:
      tags:
        - Projects
      summary: Get project
      description: Gets just one project.
      operationId: ApiProjectsByProjectIdGet
      consumes: []
      produces:
        - application/json
      parameters:
        - name: projectId
          in: path
          description: Project identifier
          required: true
          type: string
          pattern: '[a-z0-9]+(?:-[a-z0-9]+)*'
      responses:
        '200':
          description: The project
          schema:
            $ref: '#/definitions/Project'
          examples:
            application/json:
              - id: my-blog
                name: My Blog
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
        - masterKey: []
    put:
      tags:
        - Projects
      summary: Upsert project
      description: >-
        Updates project. Identifier cannot by changed. You can only change a
        name at the moment.
      operationId: ApiProjectsByProjectIdPut
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          description: Project identifier
          required: true
          type: string
        - name: name
          in: query
          description: Name
          required: false
          type: string
      responses:
        '201':
          description: The operation result message
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
        - masterKey: []
    delete:
      tags:
        - Projects
      summary: Delete project
      description: >-
        Deletes the project. Do not be worry too much. Non empty projects cannot
        be deleted.
      operationId: ApiProjectsByProjectIdDelete
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          description: Project identifier
          required: true
          type: string
      responses:
        '200':
          description: The operation result message
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      security:
        - masterKey: []
  '/api/projects/{projectId}/project-keys':
    get:
      tags:
        - Projects
      summary: Get project keys
      description: Gets project keys.
      operationId: ApiProjectsByProjectIdProject-keysGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          description: Project identifier
          required: true
          type: string
      responses:
        '200':
          description: A collection of project keys
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectKey'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
      security:
        - masterKey: []
    post:
      tags:
        - Projects
      summary: Create project key
      description: Creates a new project key.
      operationId: ApiProjectsByProjectIdProject-keysPost
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          description: Project identifier
          required: true
          type: string
        - name: key
          in: query
          description: Key
          required: false
          type: string
        - name: isReadonly
          in: query
          description: Flag if it is readonly key
          required: false
          type: boolean
      responses:
        '201':
          description: The operation result message
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
      security:
        - masterKey: []
  '/api/projects/{projectId}/project-keys/{key}':
    put:
      tags:
        - Projects
      summary: Upsert project key
      description: >-
        Update an existing project key. You can just change if it's readonly or
        not.
      operationId: ApiProjectsByProjectIdProject-keysByKeyPut
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          description: Project identifier
          required: true
          type: string
        - name: key
          in: path
          description: Key
          required: true
          type: string
        - name: isReadonly
          in: query
          description: 'If set to {true} is readonly'
          required: true
          type: boolean
      responses:
        '200':
          description: The operation result message
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
      security:
        - masterKey: []
    delete:
      tags:
        - Projects
      summary: Delete project key
      description: Deletes an existing project key.
      operationId: ApiProjectsByProjectIdProject-keysByKeyDelete
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          description: Project identifier
          required: true
          type: string
        - name: key
          in: path
          description: Key
          required: true
          type: string
      responses:
        '200':
          description: The operation result message
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
      security:
        - masterKey: []
  '/api/projects/{projectId}/document-types':
    get:
      tags:
        - Project
      operationId: ApiProjectsByProjectIdDocument-typesGet
      summary: Gets document types in the project
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/KotoriCore.Domains.SimpleDocumentType'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
  '/api/projects/{projectId}/document-types/{documentType}/{documentTypeId}':
    get:
      tags:
        - Project
      operationId: ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KotoriCore.Domains.SimpleDocumentType'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
  '/api/projects/{projectId}/document-types/{documentType}/{documentTypeId}/count':
    get:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdCountGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: drafts
          in: query
          required: true
          type: boolean
        - name: future
          in: query
          required: true
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KotoriServer.Tokens.CountResult'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
  '/api/projects/{projectId}/document-types/{documentType}/{documentTypeId}/documents/{documentId}/{index}/versions/{version}':
    get:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdDocumentsByDocumentIdByIndexVersionsByVersionGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: documentId
          in: path
          required: true
          type: string
        - name: index
          in: path
          required: true
          type: integer
          format: int64
        - name: version
          in: path
          required: true
          type: integer
          format: int64
        - name: format
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KotoriCore.Domains.SimpleDocument'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
  '/api/projects/{projectId}/document-types/{documentType}/{documentTypeId}/documents/{documentId}':
    get:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdDocumentsByDocumentIdByIndexGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: documentId
          in: path
          required: true
          type: string
        - name: index
          in: query
          required: false
          type: integer
          format: int64
        - name: format
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KotoriCore.Domains.SimpleDocument'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
    post:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdDocumentsByDocumentIdByIndexPost
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: documentId
          in: path
          required: true
          type: string
        - name: index
          in: query
          required: false
          type: integer
          format: int64
        - name: content
          in: body
          required: false
          schema:
            type: string
      responses:
        '201':
          description: Success
          schema:
            type: string
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
    delete:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdDocumentsByDocumentIdByIndexDelete
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: documentId
          in: path
          required: true
          type: string
        - name: index
          in: query
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KotoriServer.Tokens.CountResult'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
  '/api/projects/{projectId}/document-types/{documentType}/{documentTypeId}/documents/{documentId}/versions':
    get:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdDocumentsByDocumentIdVersionsGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: documentId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/KotoriCore.Domains.SimpleDocumentVersion'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
  '/api/projects/{projectId}/document-types/{documentType}/{documentTypeId}/documents/{documentId}/{index}/versions':
    get:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdDocumentsByDocumentIdByIndexVersionsGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: documentId
          in: path
          required: true
          type: string
        - name: index
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/KotoriCore.Domains.SimpleDocumentVersion'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
  '/api/projects/{projectId}/document-types/{documentType}/{documentTypeId}/find':
    get:
      tags:
        - Project
      operationId: >-
        ApiProjectsByProjectIdDocument-typesByDocumentTypeByDocumentTypeIdFindGet
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: documentType
          in: path
          required: true
          type: string
        - name: documentTypeId
          in: path
          required: true
          type: string
        - name: top
          in: query
          required: false
          type: integer
          format: int32
        - name: select
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
        - name: drafts
          in: query
          required: true
          type: boolean
        - name: future
          in: query
          required: true
          type: boolean
        - name: skip
          in: query
          required: false
          type: integer
          format: int32
        - name: format
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/KotoriCore.Domains.SimpleDocument'
        '404':
          description: Not Found
          schema:
            type: string
        '500':
          description: Internal server error
definitions:
  InstanceResult:
    description: Instance result.
    type: object
    properties:
      instance:
        type: string
  CreateProjectRequest:
    description: Create project.
    type: object
    properties:
      id:
        type: string
        pattern: '[a-z0-9]+(?:-[a-z0-9]+)*'
      name:
        type: string
    example:
      id: "my-blog"
      name: "My blog"
  CreateProjectResult:
    description: Create project result.
    type: object
    properties:
      id: 
        type: string
        pattern: '[a-z0-9]+(?:-[a-z0-9]+)*'
      name:
        type: string
    example:
      id: my-blog
      url: /api/projects/my-blog
  Project:
    type: object
    properties:
      id:
        type: string
        pattern: '[a-z0-9]+(?:-[a-z0-9]+)*'
      name:
        type: string


  ProjectKey:
    type: object
    properties:
      key:
        type: string
      isReadonly:
        type: boolean
  KotoriCore.Domains.SimpleDocumentType:
    type: object
    properties:
      identifier:
        type: string
      type:
        type: string
      fields:
        type: array
        items:
          type: string
  KotoriServer.Tokens.CountResult:
    description: Count result.
    type: object
    properties:
      count:
        format: int64
        type: integer
  KotoriCore.Domains.SimpleDocument:
    type: object
    properties:
      identifier:
        type: string
      slug:
        type: string
      meta:
        type: object
      content:
        type: string
      date:
        format: date-time
        type: string
      modified:
        format: date-time
        type: string
      draft:
        type: boolean
      version:
        format: int64
        type: integer
      filename:
        type: string
  KotoriCore.Domains.SimpleDocumentVersion:
    type: object
    properties:
      version:
        format: int64
        type: integer
      hash:
        type: string
      date:
        format: date-time
        type: string
securityDefinitions:
  masterKey:
    name: masterKey
    in: header
    type: apiKey
    description: Master operations like managing projects.
  projectKey:
    name: projectKey
    in: header
    type: apiKey
    description: Operations in the context of one project.
